//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CBRemoteControl.Server.ServerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerService.IServerService")]
    public interface IServerService {
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 GetCommandResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetCommand", ReplyAction="http://tempuri.org/IServerService/GetCommandResponse")]
        CBRemoteControl.Server.ServerService.GetCommandResponse GetCommand(CBRemoteControl.Server.ServerService.GetCommandRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServerService/GetCommand", ReplyAction="http://tempuri.org/IServerService/GetCommandResponse")]
        System.IAsyncResult BeginGetCommand(CBRemoteControl.Server.ServerService.GetCommandRequest request, System.AsyncCallback callback, object asyncState);
        
        CBRemoteControl.Server.ServerService.GetCommandResponse EndGetCommand(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/PutScreen", ReplyAction="http://tempuri.org/IServerService/PutScreenResponse")]
        void PutScreen(CBRemoteControl.Model.ScreenPackage sp);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServerService/PutScreen", ReplyAction="http://tempuri.org/IServerService/PutScreenResponse")]
        System.IAsyncResult BeginPutScreen(CBRemoteControl.Model.ScreenPackage sp, System.AsyncCallback callback, object asyncState);
        
        void EndPutScreen(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/HeartBeat", ReplyAction="http://tempuri.org/IServerService/HeartBeatResponse")]
        bool HeartBeat(CBRemoteControl.Model.ServerInfo clientInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServerService/HeartBeat", ReplyAction="http://tempuri.org/IServerService/HeartBeatResponse")]
        System.IAsyncResult BeginHeartBeat(CBRemoteControl.Model.ServerInfo clientInfo, System.AsyncCallback callback, object asyncState);
        
        bool EndHeartBeat(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCommandRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCommand", Namespace="http://tempuri.org/", Order=0)]
        public CBRemoteControl.Server.ServerService.GetCommandRequestBody Body;
        
        public GetCommandRequest() {
        }
        
        public GetCommandRequest(CBRemoteControl.Server.ServerService.GetCommandRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetCommandRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public CBRemoteControl.Model.ServerInfo clientInfo;
        
        public GetCommandRequestBody() {
        }
        
        public GetCommandRequestBody(CBRemoteControl.Model.ServerInfo clientInfo) {
            this.clientInfo = clientInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCommandResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCommandResponse", Namespace="http://tempuri.org/", Order=0)]
        public CBRemoteControl.Server.ServerService.GetCommandResponseBody Body;
        
        public GetCommandResponse() {
        }
        
        public GetCommandResponse(CBRemoteControl.Server.ServerService.GetCommandResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetCommandResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetCommandResult;
        
        public GetCommandResponseBody() {
        }
        
        public GetCommandResponseBody(string GetCommandResult) {
            this.GetCommandResult = GetCommandResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerServiceChannel : CBRemoteControl.Server.ServerService.IServerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HeartBeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HeartBeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerServiceClient : System.ServiceModel.ClientBase<CBRemoteControl.Server.ServerService.IServerService>, CBRemoteControl.Server.ServerService.IServerService {
        
        private BeginOperationDelegate onBeginGetCommandDelegate;
        
        private EndOperationDelegate onEndGetCommandDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommandCompletedDelegate;
        
        private BeginOperationDelegate onBeginPutScreenDelegate;
        
        private EndOperationDelegate onEndPutScreenDelegate;
        
        private System.Threading.SendOrPostCallback onPutScreenCompletedDelegate;
        
        private BeginOperationDelegate onBeginHeartBeatDelegate;
        
        private EndOperationDelegate onEndHeartBeatDelegate;
        
        private System.Threading.SendOrPostCallback onHeartBeatCompletedDelegate;
        
        public ServerServiceClient() {
        }
        
        public ServerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetCommandCompletedEventArgs> GetCommandCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PutScreenCompleted;
        
        public event System.EventHandler<HeartBeatCompletedEventArgs> HeartBeatCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CBRemoteControl.Server.ServerService.GetCommandResponse CBRemoteControl.Server.ServerService.IServerService.GetCommand(CBRemoteControl.Server.ServerService.GetCommandRequest request) {
            return base.Channel.GetCommand(request);
        }
        
        public string GetCommand(CBRemoteControl.Model.ServerInfo clientInfo) {
            CBRemoteControl.Server.ServerService.GetCommandRequest inValue = new CBRemoteControl.Server.ServerService.GetCommandRequest();
            inValue.Body = new CBRemoteControl.Server.ServerService.GetCommandRequestBody();
            inValue.Body.clientInfo = clientInfo;
            CBRemoteControl.Server.ServerService.GetCommandResponse retVal = ((CBRemoteControl.Server.ServerService.IServerService)(this)).GetCommand(inValue);
            return retVal.Body.GetCommandResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CBRemoteControl.Server.ServerService.IServerService.BeginGetCommand(CBRemoteControl.Server.ServerService.GetCommandRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommand(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCommand(CBRemoteControl.Model.ServerInfo clientInfo, System.AsyncCallback callback, object asyncState) {
            CBRemoteControl.Server.ServerService.GetCommandRequest inValue = new CBRemoteControl.Server.ServerService.GetCommandRequest();
            inValue.Body = new CBRemoteControl.Server.ServerService.GetCommandRequestBody();
            inValue.Body.clientInfo = clientInfo;
            return ((CBRemoteControl.Server.ServerService.IServerService)(this)).BeginGetCommand(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CBRemoteControl.Server.ServerService.GetCommandResponse CBRemoteControl.Server.ServerService.IServerService.EndGetCommand(System.IAsyncResult result) {
            return base.Channel.EndGetCommand(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetCommand(System.IAsyncResult result) {
            CBRemoteControl.Server.ServerService.GetCommandResponse retVal = ((CBRemoteControl.Server.ServerService.IServerService)(this)).EndGetCommand(result);
            return retVal.Body.GetCommandResult;
        }
        
        private System.IAsyncResult OnBeginGetCommand(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CBRemoteControl.Model.ServerInfo clientInfo = ((CBRemoteControl.Model.ServerInfo)(inValues[0]));
            return this.BeginGetCommand(clientInfo, callback, asyncState);
        }
        
        private object[] OnEndGetCommand(System.IAsyncResult result) {
            string retVal = this.EndGetCommand(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommandCompleted(object state) {
            if ((this.GetCommandCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommandCompleted(this, new GetCommandCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommandAsync(CBRemoteControl.Model.ServerInfo clientInfo) {
            this.GetCommandAsync(clientInfo, null);
        }
        
        public void GetCommandAsync(CBRemoteControl.Model.ServerInfo clientInfo, object userState) {
            if ((this.onBeginGetCommandDelegate == null)) {
                this.onBeginGetCommandDelegate = new BeginOperationDelegate(this.OnBeginGetCommand);
            }
            if ((this.onEndGetCommandDelegate == null)) {
                this.onEndGetCommandDelegate = new EndOperationDelegate(this.OnEndGetCommand);
            }
            if ((this.onGetCommandCompletedDelegate == null)) {
                this.onGetCommandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommandCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommandDelegate, new object[] {
                        clientInfo}, this.onEndGetCommandDelegate, this.onGetCommandCompletedDelegate, userState);
        }
        
        public void PutScreen(CBRemoteControl.Model.ScreenPackage sp) {
            base.Channel.PutScreen(sp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPutScreen(CBRemoteControl.Model.ScreenPackage sp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPutScreen(sp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPutScreen(System.IAsyncResult result) {
            base.Channel.EndPutScreen(result);
        }
        
        private System.IAsyncResult OnBeginPutScreen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CBRemoteControl.Model.ScreenPackage sp = ((CBRemoteControl.Model.ScreenPackage)(inValues[0]));
            return this.BeginPutScreen(sp, callback, asyncState);
        }
        
        private object[] OnEndPutScreen(System.IAsyncResult result) {
            this.EndPutScreen(result);
            return null;
        }
        
        private void OnPutScreenCompleted(object state) {
            if ((this.PutScreenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PutScreenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PutScreenAsync(CBRemoteControl.Model.ScreenPackage sp) {
            this.PutScreenAsync(sp, null);
        }
        
        public void PutScreenAsync(CBRemoteControl.Model.ScreenPackage sp, object userState) {
            if ((this.onBeginPutScreenDelegate == null)) {
                this.onBeginPutScreenDelegate = new BeginOperationDelegate(this.OnBeginPutScreen);
            }
            if ((this.onEndPutScreenDelegate == null)) {
                this.onEndPutScreenDelegate = new EndOperationDelegate(this.OnEndPutScreen);
            }
            if ((this.onPutScreenCompletedDelegate == null)) {
                this.onPutScreenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPutScreenCompleted);
            }
            base.InvokeAsync(this.onBeginPutScreenDelegate, new object[] {
                        sp}, this.onEndPutScreenDelegate, this.onPutScreenCompletedDelegate, userState);
        }
        
        public bool HeartBeat(CBRemoteControl.Model.ServerInfo clientInfo) {
            return base.Channel.HeartBeat(clientInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHeartBeat(CBRemoteControl.Model.ServerInfo clientInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHeartBeat(clientInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndHeartBeat(System.IAsyncResult result) {
            return base.Channel.EndHeartBeat(result);
        }
        
        private System.IAsyncResult OnBeginHeartBeat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CBRemoteControl.Model.ServerInfo clientInfo = ((CBRemoteControl.Model.ServerInfo)(inValues[0]));
            return this.BeginHeartBeat(clientInfo, callback, asyncState);
        }
        
        private object[] OnEndHeartBeat(System.IAsyncResult result) {
            bool retVal = this.EndHeartBeat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHeartBeatCompleted(object state) {
            if ((this.HeartBeatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HeartBeatCompleted(this, new HeartBeatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HeartBeatAsync(CBRemoteControl.Model.ServerInfo clientInfo) {
            this.HeartBeatAsync(clientInfo, null);
        }
        
        public void HeartBeatAsync(CBRemoteControl.Model.ServerInfo clientInfo, object userState) {
            if ((this.onBeginHeartBeatDelegate == null)) {
                this.onBeginHeartBeatDelegate = new BeginOperationDelegate(this.OnBeginHeartBeat);
            }
            if ((this.onEndHeartBeatDelegate == null)) {
                this.onEndHeartBeatDelegate = new EndOperationDelegate(this.OnEndHeartBeat);
            }
            if ((this.onHeartBeatCompletedDelegate == null)) {
                this.onHeartBeatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHeartBeatCompleted);
            }
            base.InvokeAsync(this.onBeginHeartBeatDelegate, new object[] {
                        clientInfo}, this.onEndHeartBeatDelegate, this.onHeartBeatCompletedDelegate, userState);
        }
    }
}
